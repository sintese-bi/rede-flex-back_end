generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  use_uuid        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  use_name        String?   @db.VarChar(100)
  use_email       String?   @db.VarChar(50)
  use_password    String?   @db.VarChar(255)
  use_created_at  DateTime  @default(now()) @db.Timestamp(6)
  use_updated_at  DateTime  @default(now()) @db.Timestamp(6)
  use_date_expire DateTime?
  use_token       String?   @db.VarChar(255)
  use_level       String?   @db.VarChar(20)
  use_whats_app   String[]  @db.VarChar(255)
}

model posto_signal {
  table_id      String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  posto_id      String?   @db.Uuid
  vol_sold      Float?    @db.Real
  vol_rate      Float?    @db.Real
  vol_alert     String?   @db.VarChar(255)
  invoicing     Float?    @db.Real
  invoice_rate  Float?    @db.Real
  invoice_alert String?   @db.VarChar(255)
  created_at    DateTime  @default(now()) @db.Timestamp(6)
  rd_posto      rd_posto? @relation(fields: [posto_id], references: [posto_uuid])

  @@index([posto_id])
}

model rd_posto {
  posto_uuid    String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  posto_name    String?        @db.VarChar(255)
  posto_signals posto_signal[]
}

model basedados {
  company_uuid       String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  company_emp        Int?
  company_name       String?   @db.VarChar(50)
  company_date       DateTime? @db.Date
  company_week_day   String?   @db.VarChar(50)
  company_fuel       String?   @db.VarChar(50)
  company_volume     Float?    @db.Real
  company_cost       Float?    @db.Real
  company_sale       Float?    @db.Real
  company_profit     Float?    @db.Real
  company_created_at DateTime  @default(now()) @db.Timestamp(6)
  company_updated_at DateTime  @default(now()) @db.Timestamp(6)
}

model ibm_info {
  id                                   String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  ibm                                  String?             @db.VarChar(255)
  nomefantasia                         String?             @db.VarChar(255)
  cnpj                                 String?             @db.VarChar(255)
  razaosocial                          String?             @db.VarChar(255)
  cep                                  String?             @db.VarChar(255)
  lat                                  Float?
  long                                 Float?
  endereco                             String?             @db.VarChar(255)

}

model gas_station {
  gas_uuid       String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  gas_ibm        String?  @db.VarChar(255)
  gas_fuel_type  String?  @db.VarChar(255)
  gas_value      Float?
  gas_identifier String?  @db.VarChar(255)
  gas_created_at DateTime @default(now()) @db.Timestamp(6)
  gas_updated_at DateTime @default(now()) @db.Timestamp(6)
}

model dataframe_fuel {
  datafuel_uuid            String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  datafuel_posto           String?  @db.VarChar(255)
  datafuel_abastecimentos  Float?
  datafuel_galonagem_litro Float?
  datafuel_faturamento     Float?
  datafuel_custo           Float?
  datafuel_lucro           Float?
  datafuel_topCombustivel  String?  @db.VarChar(255)
  datafuel_dt_aval         DateTime @db.Date
  datafuel_dayofweek       String?  @db.VarChar(255)
  datafuel_regional        String?  @db.VarChar(255)
  datafuel_created_at      DateTime @default(now()) @db.Timestamp(6)
  datafuel_updated_at      DateTime @default(now()) @db.Timestamp(6)
}

model dataframe_product {
  dataproduct_uuid                String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  dataproduct_posto               String? @db.VarChar(255)
  dataproduct_venda_produto       String? @db.VarChar(255)
  dataproduct_valor_venda         Float?
  dataproduct_qtd_produto_vendido Float?
  dataproduct_dt_registro         String? @db.VarChar(255)
  dataproduct_updated             String? @db.VarChar(255)
}


