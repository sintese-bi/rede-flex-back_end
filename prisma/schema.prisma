generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  use_uuid               String                     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  use_name               String?                    @db.VarChar(100)
  use_email              String?                    @db.VarChar(50)
  use_password           String?                    @db.VarChar(255)
  use_created_at         DateTime                   @default(now()) @db.Timestamp(6)
  use_updated_at         DateTime                   @default(now()) @db.Timestamp(6)
  use_date_expire        DateTime?
  use_token              String?                    @db.VarChar(255)
  use_level              String?                    @db.VarChar(20)
  use_whats_app          String[]                   @db.VarChar(255)
  gasStationSetVariables gas_station_setvariables[]
  regionSetVariables     region_setvariables[]
}

model ibm_info {
  ibm                                     String?                    @db.VarChar(255)
  nomefantasia                            String?                    @db.VarChar(255)
  cnpj                                    String?                    @db.VarChar(255)
  razaosocial                             String?                    @db.VarChar(255)
  cep                                     String?                    @db.VarChar(255)
  lat                                     Float?
  long                                    Float?
  id                                      String                     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  endereco                                String?                    @db.VarChar(255)
  regional                                String?                    @db.VarChar(255)
  ibm_margin_AL                           Float[]
  ibm_margin_GC                           Float[]
  ibm_margin_Total                        Float[]
  ibm_volume_AL                           Float[]
  ibm_volume_GC                           Float[]
  ibm_volume_Total                        Float[]
  ibm_margin_ETANOL_HIDRATADO_COMBUSTIVEL Float[]
  gasStationSetVariables                  gas_station_setvariables[]
}

model gas_station_setvariables {
  gas_station_uuid                                      String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  gas_station_marginGC                                  Float?
  gas_station_marginAL                                  Float?
  gas_station_marginTotal                               Float?
  gas_station_volumeGC                                  Float?
  gas_station_volumeAL                                  Float?
  gas_station_volumeTotal                               Float?
  gas_station_type_marginGC                             Boolean?
  gas_station_type_marginAL                             Boolean?
  gas_station_type_marginTotal                          Boolean?
  gas_station_type_volumeGC                             Boolean?
  gas_station_type_volumeAL                             Boolean?
  gas_station_type_volumeTotal                          Boolean?
  gas_station_whats_app                                 String[]  @db.VarChar(255)
  gas_station_created_at                                DateTime  @default(now()) @db.Timestamp(6)
  gas_station_updated_at                                DateTime  @default(now()) @db.Timestamp(6)
  ibm_info_id                                           String?   @db.Uuid
  use_uuid                                              String?   @db.Uuid
  verification_msg_sent                                 Boolean?  @default(false)
  verification_hour_marginAL                            DateTime? @default(dbgenerated("'2023-01-01 00:00:00'::timestamp without time zone"))
  verification_hour_marginGC                            DateTime? @default(dbgenerated("'2023-01-01 00:00:00'::timestamp without time zone"))
  gas_station_margin_ETANOL_HIDRATADO_COMBUSTIVEL       Float?
  gas_station_type_margin_ETANOL_HIDRATADO_COMBUSTIVEL  Boolean?
  verification_hour_margin_ETANOL_HIDRATADO_COMBUSTIVEL DateTime? @default(dbgenerated("'2023-01-01 00:00:00'::timestamp without time zone"))
  ibm_info                                              ibm_info? @relation(fields: [ibm_info_id], references: [id])
  users                                                 users?    @relation(fields: [use_uuid], references: [use_uuid])
}

model region_setvariables {
  region_uuid                                           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  region_marginGC                                       Float?
  region_marginAL                                       Float?
  region_marginTotal                                    Float?
  region_volumeGC                                       Float?
  region_volumeAL                                       Float?
  region_volumeTotal                                    Float?
  region_type_marginGC                                  Boolean?
  region_type_marginAL                                  Boolean?
  region_type_marginTotal                               Boolean?
  region_type_volumeGC                                  Boolean?
  region_type_volumeAL                                  Boolean?
  region_type_volumeTotal                               Boolean?
  region_whats_app                                      String[]  @db.VarChar(255)
  region_station_created_at                             DateTime  @default(now()) @db.Timestamp(6)
  region_station_updated_at                             DateTime  @default(now()) @db.Timestamp(6)
  use_uuid                                              String?   @db.Uuid
  regions_uuid                                          String?   @db.Uuid
  verification_msg_sent                                 Boolean?  @default(false)
  verification_hour_marginAL                            DateTime? @default(dbgenerated("'2023-01-01 00:00:00'::timestamp without time zone"))
  verification_hour_marginGC                            DateTime? @default(dbgenerated("'2023-01-01 00:00:00'::timestamp without time zone"))
  region_margin_ETANOL_HIDRATADO_COMBUSTIVEL            Float?
  region_type_margin_ETANOL_HIDRATADO_COMBUSTIVEL       Boolean?
  verification_hour_margin_ETANOL_HIDRATADO_COMBUSTIVEL DateTime? @default(dbgenerated("'2023-01-01 00:00:00'::timestamp without time zone"))
  regions                                               regions?  @relation(fields: [regions_uuid], references: [regions_uuid])
  users                                                 users?    @relation(fields: [use_uuid], references: [use_uuid])
}

model regions {
  regions_uuid                                String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  regions_name                                String?               @db.VarChar(50)
  regions_types                               String?               @db.VarChar(50)
  region_created_at                           DateTime              @default(now()) @db.Timestamp(6)
  region_updated_at                           DateTime              @default(now()) @db.Timestamp(6)
  regions_margin_AL                           Float[]
  regions_margin_GC                           Float[]
  regions_margin_Total                        Float[]
  regions_volume_AL                           Float[]
  regions_volume_GC                           Float[]
  regions_volume_Total                        Float[]
  regions_margin_ETANOL_HIDRATADO_COMBUSTIVEL Float[]
  regionSetVariables                          region_setvariables[]
}
